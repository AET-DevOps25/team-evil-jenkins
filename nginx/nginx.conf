worker_processes  1;

events {
    worker_connections  1024;
}

http {
    # Log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;

    # Lua shared dictionaries for OpenID Connect (JWKS & discovery cache)
    lua_shared_dict discovery 1m;
    lua_shared_dict jwks 1m;
    lua_ssl_trusted_certificate /etc/pki/tls/certs/ca-bundle.crt;
    lua_ssl_verify_depth 5;

    # Simple upstreams for each microservice
    upstream user_service {
        server user-service:8080;
    }
    upstream location_service {
        server location-service:8080;
    }
    upstream messaging_service {
        server messaging-service:8080;
    }
    upstream matching_service {
        server matching-service:8080;
    }

    server {
        listen 80;

        # Health check
        location /healthz {
            return 200 'API Gateway OK';
            add_header Content-Type text/plain;
        }

        # Route requests by path prefix
        location /user/ {
            access_by_lua_file /etc/nginx/oidc.lua;
            proxy_pass http://user_service/;
        }
        location /location/ {
            access_by_lua_file /etc/nginx/oidc.lua;
            proxy_pass http://location_service/;
        }
        location /messaging/ {
            access_by_lua_file /etc/nginx/oidc.lua;
            proxy_pass http://messaging_service/;
        }
        location /genai/ {
            access_by_lua_file /etc/nginx/oidc.lua;
            proxy_pass http://genai_service/;
        }

        location /matching/ {
            access_by_lua_file /etc/nginx/oidc.lua;
            proxy_pass http://matching_service/;
        }

        # Fallback
        location / {
            return 404;
        }
    }
}
