apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "monitoring-chart.fullname" . }}-grafana-deployment
  labels:
    {{- include "monitoring-chart.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "monitoring-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: grafana
  template:
    metadata:
      labels:
        {{- include "monitoring-chart.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: grafana
    spec:
      securityContext:
        fsGroup: 472
        runAsUser: 472
        runAsGroup: 472

      containers:
        - name: grafana
          image: "{{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}"
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_SECURITY_ADMIN_USER 
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secrets
                  key: GF_SECURITY_ADMIN_PASSWORD

            # {{- if .Values.grafana.smtp.enabled }}
            # - name: GF_SMTP_ENABLED
            #   value: "true"
            # - name: GF_SMTP_HOST
            #   value: {{ .Values.grafana.smtp.host | quote }}
            # - name: GF_SMTP_USER
            #   value: {{ .Values.grafana.smtp.user | quote }}
            # - name: GF_SMTP_FROM_ADDRESS
            #   value: {{ .Values.grafana.smtp.from_address | quote }}
            # - name: GF_SMTP_FROM_NAME
            #   value: {{ .Values.grafana.smtp.from_name | quote }}
            # - name: GF_SMTP_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: {{ .Values.grafana.smtp.existingSecret }}
            #       key: {{ .Values.grafana.smtp.secretKey }}
            # {{- end }}

          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-provisioning-datasources
              mountPath: /etc/grafana/provisioning/datasources
            - name: grafana-provisioning-dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: grafana-provisioning-notifiers
              mountPath: /etc/grafana/provisioning/notifiers
      volumes:
        - name: grafana-provisioning-datasources
          configMap:
            name: {{ include "monitoring-chart.fullname" . }}-grafana-config
        - name: grafana-provisioning-dashboards
          configMap:
            name: {{ include "monitoring-chart.fullname" . }}-main-dashboard
        - name: grafana-provisioning-notifiers
          configMap:
            name: {{ include "monitoring-chart.fullname" . }}-grafana-notifiers

        {{- if .Values.grafana.persistence.enabled }}
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: {{ printf "%s-grafana-pvc" (include "monitoring-chart.fullname" .) }}
        {{- else }}
        - name: grafana-storage
          emptyDir: {}
        {{- end }}