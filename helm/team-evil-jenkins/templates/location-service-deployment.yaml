apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "team-evil-jenkins.fullname" . }}-location-service
  labels:
    {{- include "team-evil-jenkins.labels" . | nindent 4 }}
    app.kubernetes.io/component: location-service
spec:
  replicas: {{ .Values.locationService.replicaCount }}
  selector:
    matchLabels:
      {{- include "team-evil-jenkins.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: location-service
  template:
    metadata:
      labels:
        {{- include "team-evil-jenkins.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: location-service
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "team-evil-jenkins.serviceAccountName" . }}
      securityContext:
        {{- .Values.locationService.podSecurityContext | toYaml | nindent 8 }}
      containers:
        - name: location-service
          securityContext:
            {{- .Values.locationService.securityContext | toYaml | nindent 12 }}
          image: "{{ .Values.ghcr.registry }}/{{ .Values.ghcr.organization }}/{{ .Values.locationService.image.repository }}:{{ .Values.locationService.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.locationService.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: http
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          # Add appropriate liveness and readiness probes for location-service
          # For example, if it has a /health endpoint:
          # livenessProbe:
          #   httpGet:
          #     path: /actuator/health # Or your specific health check endpoint
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /actuator/health # Or your specific health check endpoint
          #     port: http
          resources:
            {{- .Values.locationService.resources | toYaml | nindent 12 }}
      {{- with .Values.locationService.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.locationService.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.locationService.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
