services:
  nginx:
    build: ./nginx
    container_name: api-gateway
    ports:
      - "80:80"
    environment:
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_AUDIENCE=${AUTH0_AUDIENCE}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/oidc.lua:/etc/nginx/oidc.lua:ro
    depends_on:
      - user-service
      - location-service
      - messaging-service
      - matching-service
  user-service:
    build:
      context: ./server/userservice
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=development


  location-service:
    build:
      context: ./server/locationservice
      dockerfile: Dockerfile
    ports:
      - "8081:8080"

  messaging-service:
    build:
      context: ./server/messagingservice
      dockerfile: Dockerfile
    ports:
      - "8082:8080"

  matching-service:
    build:
      context: ./server/matchingservice
      dockerfile: Dockerfile
    ports:
      - "8083:8080"

  client:
    build: ./client
    ports:
      - "3000:80"

  genai:
    build: ./genai
    ports:
      - "8000:8000"
    environment:
      - OPENWEBUI_URL=${OPENWEBUI_URL}
      - OPENWEBUI_API_KEY=${OPENWEBUI_API_KEY}
    depends_on:
      - matching-service

  prometheus: 
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    ports: 
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    depends_on:
      - user-service

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_FEATURE_TOGGLES_ENABLE=logsInExplore
      - GF_LOG_CONSOLECOLORS=true
    depends_on:
      - prometheus
    restart: unless-stopped



volumes: # TODO: add volumes for database and maybe other services
  prometheus_data:
  grafana-storage: